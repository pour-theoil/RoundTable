@model RoundTable.Models.Reporter

@{
    ViewData["Title"] = "Details";
}



<div class="container pt-5" style="margin-top: 4em; margin-bottom:7em">
    <div class="row justify-content-center">
        <div class="card card col-md-12 col-lg-8" style="background-color: rgba(100, 111, 88, 0.1) ">

            <div class="card-body">
                <h1>@Html.DisplayFor(model => model.Displayname)</h1>
                <div class="row justify-content-center">

                    <div>
                        @if (String.IsNullOrEmpty(Model.ImageLocation))
                        {
                            <img src="https://images.all-free-download.com/images/graphiclarge/man_silhouette_clip_art_9510.jpg"
                                 class="rounded mx-auto d-block"
                                 alt="Person"
                                 style="height: 100px; width:auto" />
                        }
                        else
                        {

                            <img src="@Url.Content(@Model.ImageLocation)" class="rounded userimg" alt="Person" />

                        }
                        <a asp-controller="Image" asp-action="Create" asp-route-id="@Model.Id" class="btn btn-outline-primary mx-1" title="Upload Photo">
                            Upload Photo
                        </a>
                        <a asp-controller="Reporter" asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-primary mx-1" title="Edit Profile">
                            Edit Profile
                        </a>
                        <dl class="row">

                            <dt class="col-sm-4">
                                @Html.DisplayNameFor(model => model.Organization)
                            </dt>
                            <dd class="col-sm-6">
                                @Html.DisplayFor(model => model.Organization)
                            </dd>
                            <dt class="col-sm-4">
                                @Html.DisplayNameFor(model => model.Email)
                            </dt>
                            <dd class="col-sm-6">
                                @Html.DisplayFor(model => model.Email)
                            </dd>
                            <dt class="col-sm-4">
                                @Html.DisplayNameFor(model => model.Phone)
                            </dt>
                            <dd class="col-sm-6">
                                @Html.DisplayFor(model => model.Phone)
                            </dd>

                        </dl>


                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div style="display: block; flex-direction:row; margin-bottom: 50em">

    <div id="mixContainer" style="width:50%"></div>
    <div id="statusContainer" style="width:50%; position:absolute; right:0"></div>
</div>


@section Scripts {
    <script type="text/javascript">
        $(function () {
            const getStatuses = (call) => {
                return fetch(`/api/Charts/${call}`).then(resp => {
                    if (resp.ok) {
                        let resultes = resp.json();

                        return resultes;
                    }
                    else {
                        throw new Error("An unknown error occurred.");
                    }
                })
            }

            const chart = (type, title, datapoints) => {
                var statuschart = new CanvasJS.Chart(`${type}Container`, {
                    title: {
                        text: title
                    },
                    animationEnabled: true,
                    legend: {
                        verticalAlign: "center",
                        horizontalAlign: "left",
                        fontSize: 20,
                        fontFamily: "Helvetica"
                    },
                    theme: "light2",
                    data: [
                        {
                            type: "pie",
                            indexLabelFontFamily: "Garamond",
                            indexLabelFontSize: 20,
                            indexLabel: "{label}",
                            startAngle: -20,
                            showInLegend: false,

                            dataPoints:
                                datapoints

                        }
                    ]


                });
                statuschart.render();
            }

            getStatuses("status").then(resp => {

                var datapoints = [];
                resp.forEach(pair => datapoints.push(pair))
                chart("status", "Story Status", datapoints)
            });

            getStatuses("mix").then(resp => {

                var datapoints = [];
                resp.forEach(pair => datapoints.push(pair))
                chart("mix", "Story Mix", datapoints)
            });
        });
    </script>
}
