@model RoundTable.Models.Reporter

@{
    ViewData["Title"] = "Details";
}


<h1>@Html.DisplayFor(model => model.Displayname)</h1>

<div class="container pt-5">
    <div class="row justify-content-center">
        <div class="card col-md-12 col-lg-8">
            <div>
                <dl class="row">

                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.Organization)
                    </dt>
                    <dd class="col-sm-6">
                        @Html.DisplayFor(model => model.Organization)
                    </dd>
                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.Email)
                    </dt>
                    <dd class="col-sm-6">
                        @Html.DisplayFor(model => model.Email)
                    </dd>
                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.Phone)
                    </dt>
                    <dd class="col-sm-6">
                        @Html.DisplayFor(model => model.Phone)
                    </dd>

                </dl>
                <hr />
                @Html.ActionLink("Edit", "Edit", new { id = Model.Id })
            </div>
        </div>
    </div>
</div>
<div style="display: block; flex-direction:row">

    <div id="mixContainer" style="width:50%"></div>
    <div id="statusContainer" style="width:50%; position:absolute; right:0"></div>
</div>


@section Scripts {
    <script type="text/javascript">
        $(function () {
            const getStatuses = (call) => {
                return fetch(`/api/Charts/${call}`).then(resp => {
                    if (resp.ok) {
                        let resultes = resp.json();

                        return resultes;
                    }
                    else {
                        throw new Error("An unknown error occurred.");
                    }
                })
            }

            const chart = (type, title, datapoints) => {
                var statuschart = new CanvasJS.Chart(`${type}Container`, {
                    title: {
                        text: title
                    },
                    animationEnabled: true,
                    legend: {
                        verticalAlign: "center",
                        horizontalAlign: "left",
                        fontSize: 20,
                        fontFamily: "Helvetica"
                    },
                    theme: "light2",
                    data: [
                        {
                            type: "pie",
                            indexLabelFontFamily: "Garamond",
                            indexLabelFontSize: 20,
                            indexLabel: "{label}",
                            startAngle: -20,
                            showInLegend: false,

                            dataPoints:
                                datapoints

                        }
                    ]


                });
                statuschart.render();
            }

            getStatuses("status").then(resp => {

                var datapoints = [];
                resp.forEach(pair => datapoints.push(pair))
                chart("status", "Story Status", datapoints)
            });

            getStatuses("mix").then(resp => {

                var datapoints = [];
                resp.forEach(pair => datapoints.push(pair))
                chart("mix", "Story Mix", datapoints)
            });
        });
    </script>
}
